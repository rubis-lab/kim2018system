%!PS-Adobe-2.0 EPSF-2.0
%%Title: plot/distribution/dist_DC_SP.eps
%%Creator: gnuplot 5.0 patchlevel 3
%%CreationDate: Tue Oct 10 07:33:34 2017
%%DocumentFonts: (atend)
%%BoundingBox: 50 50 266 266
%%EndComments
%%BeginProlog
/gnudict 256 dict def
gnudict begin
%
% The following true/false flags may be edited by hand if desired.
% The unit line width and grayscale image gamma correction may also be changed.
%
/Color false def
/Blacktext false def
/Solid false def
/Dashlength 1 def
/Landscape false def
/Level1 false def
/Level3 false def
/Rounded false def
/ClipToBoundingBox false def
/SuppressPDFMark false def
/TransparentPatterns false def
/gnulinewidth 5.000 def
/userlinewidth gnulinewidth def
/Gamma 1.0 def
/BackgroundColor {-1.000 -1.000 -1.000} def
%
/vshift -66 def
/dl1 {
  10.0 Dashlength userlinewidth gnulinewidth div mul mul mul
  Rounded { currentlinewidth 0.75 mul sub dup 0 le { pop 0.01 } if } if
} def
/dl2 {
  10.0 Dashlength userlinewidth gnulinewidth div mul mul mul
  Rounded { currentlinewidth 0.75 mul add } if
} def
/hpt_ 31.5 def
/vpt_ 31.5 def
/hpt hpt_ def
/vpt vpt_ def
/doclip {
  ClipToBoundingBox {
    newpath 50 50 moveto 266 50 lineto 266 266 lineto 50 266 lineto closepath
    clip
  } if
} def
%
% Gnuplot Prolog Version 5.1 (Oct 2015)
%
%/SuppressPDFMark true def
%
/M {moveto} bind def
/L {lineto} bind def
/R {rmoveto} bind def
/V {rlineto} bind def
/N {newpath moveto} bind def
/Z {closepath} bind def
/C {setrgbcolor} bind def
/f {rlineto fill} bind def
/g {setgray} bind def
/Gshow {show} def   % May be redefined later in the file to support UTF-8
/vpt2 vpt 2 mul def
/hpt2 hpt 2 mul def
/Lshow {currentpoint stroke M 0 vshift R 
	Blacktext {gsave 0 setgray textshow grestore} {textshow} ifelse} def
/Rshow {currentpoint stroke M dup stringwidth pop neg vshift R
	Blacktext {gsave 0 setgray textshow grestore} {textshow} ifelse} def
/Cshow {currentpoint stroke M dup stringwidth pop -2 div vshift R 
	Blacktext {gsave 0 setgray textshow grestore} {textshow} ifelse} def
/UP {dup vpt_ mul /vpt exch def hpt_ mul /hpt exch def
  /hpt2 hpt 2 mul def /vpt2 vpt 2 mul def} def
/DL {Color {setrgbcolor Solid {pop []} if 0 setdash}
 {pop pop pop 0 setgray Solid {pop []} if 0 setdash} ifelse} def
/BL {stroke userlinewidth 2 mul setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
/AL {stroke userlinewidth 2 div setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
/UL {dup gnulinewidth mul /userlinewidth exch def
	dup 1 lt {pop 1} if 10 mul /udl exch def} def
/PL {stroke userlinewidth setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
3.8 setmiterlimit
% Classic Line colors (version 5.0)
/LCw {1 1 1} def
/LCb {0 0 0} def
/LCa {0 0 0} def
/LC0 {1 0 0} def
/LC1 {0 1 0} def
/LC2 {0 0 1} def
/LC3 {1 0 1} def
/LC4 {0 1 1} def
/LC5 {1 1 0} def
/LC6 {0 0 0} def
/LC7 {1 0.3 0} def
/LC8 {0.5 0.5 0.5} def
% Default dash patterns (version 5.0)
/LTB {BL [] LCb DL} def
/LTw {PL [] 1 setgray} def
/LTb {PL [] LCb DL} def
/LTa {AL [1 udl mul 2 udl mul] 0 setdash LCa setrgbcolor} def
/LT0 {PL [] LC0 DL} def
/LT1 {PL [2 dl1 3 dl2] LC1 DL} def
/LT2 {PL [1 dl1 1.5 dl2] LC2 DL} def
/LT3 {PL [6 dl1 2 dl2 1 dl1 2 dl2] LC3 DL} def
/LT4 {PL [1 dl1 2 dl2 6 dl1 2 dl2 1 dl1 2 dl2] LC4 DL} def
/LT5 {PL [4 dl1 2 dl2] LC5 DL} def
/LT6 {PL [1.5 dl1 1.5 dl2 1.5 dl1 1.5 dl2 1.5 dl1 6 dl2] LC6 DL} def
/LT7 {PL [3 dl1 3 dl2 1 dl1 3 dl2] LC7 DL} def
/LT8 {PL [2 dl1 2 dl2 2 dl1 6 dl2] LC8 DL} def
/SL {[] 0 setdash} def
/Pnt {stroke [] 0 setdash gsave 1 setlinecap M 0 0 V stroke grestore} def
/Dia {stroke [] 0 setdash 2 copy vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke
  Pnt} def
/Pls {stroke [] 0 setdash vpt sub M 0 vpt2 V
  currentpoint stroke M
  hpt neg vpt neg R hpt2 0 V stroke
 } def
/Box {stroke [] 0 setdash 2 copy exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke
  Pnt} def
/Crs {stroke [] 0 setdash exch hpt sub exch vpt add M
  hpt2 vpt2 neg V currentpoint stroke M
  hpt2 neg 0 R hpt2 vpt2 V stroke} def
/TriU {stroke [] 0 setdash 2 copy vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke
  Pnt} def
/Star {2 copy Pls Crs} def
/BoxF {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath fill} def
/TriUF {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath fill} def
/TriD {stroke [] 0 setdash 2 copy vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke
  Pnt} def
/TriDF {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath fill} def
/DiaF {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath fill} def
/Pent {stroke [] 0 setdash 2 copy gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore Pnt} def
/PentF {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath fill grestore} def
/Circle {stroke [] 0 setdash 2 copy
  hpt 0 360 arc stroke Pnt} def
/CircleF {stroke [] 0 setdash hpt 0 360 arc fill} def
/C0 {BL [] 0 setdash 2 copy moveto vpt 90 450 arc} bind def
/C1 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C2 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C3 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C4 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 180 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C5 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc
	2 copy moveto
	2 copy vpt 180 270 arc closepath fill
	vpt 0 360 arc} bind def
/C6 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C7 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C8 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 270 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C9 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 270 450 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C10 {BL [] 0 setdash 2 copy 2 copy moveto vpt 270 360 arc closepath fill
	2 copy moveto
	2 copy vpt 90 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C11 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 180 arc closepath fill
	2 copy moveto
	2 copy vpt 270 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C12 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 180 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C13 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc closepath fill
	2 copy moveto
	2 copy vpt 180 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C14 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 360 arc closepath fill
	vpt 0 360 arc} bind def
/C15 {BL [] 0 setdash 2 copy vpt 0 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/Rec {newpath 4 2 roll moveto 1 index 0 rlineto 0 exch rlineto
	neg 0 rlineto closepath} bind def
/Square {dup Rec} bind def
/Bsquare {vpt sub exch vpt sub exch vpt2 Square} bind def
/S0 {BL [] 0 setdash 2 copy moveto 0 vpt rlineto BL Bsquare} bind def
/S1 {BL [] 0 setdash 2 copy vpt Square fill Bsquare} bind def
/S2 {BL [] 0 setdash 2 copy exch vpt sub exch vpt Square fill Bsquare} bind def
/S3 {BL [] 0 setdash 2 copy exch vpt sub exch vpt2 vpt Rec fill Bsquare} bind def
/S4 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt Square fill Bsquare} bind def
/S5 {BL [] 0 setdash 2 copy 2 copy vpt Square fill
	exch vpt sub exch vpt sub vpt Square fill Bsquare} bind def
/S6 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill Bsquare} bind def
/S7 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill
	2 copy vpt Square fill Bsquare} bind def
/S8 {BL [] 0 setdash 2 copy vpt sub vpt Square fill Bsquare} bind def
/S9 {BL [] 0 setdash 2 copy vpt sub vpt vpt2 Rec fill Bsquare} bind def
/S10 {BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt Square fill
	Bsquare} bind def
/S11 {BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt2 vpt Rec fill
	Bsquare} bind def
/S12 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill Bsquare} bind def
/S13 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
	2 copy vpt Square fill Bsquare} bind def
/S14 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
	2 copy exch vpt sub exch vpt Square fill Bsquare} bind def
/S15 {BL [] 0 setdash 2 copy Bsquare fill Bsquare} bind def
/D0 {gsave translate 45 rotate 0 0 S0 stroke grestore} bind def
/D1 {gsave translate 45 rotate 0 0 S1 stroke grestore} bind def
/D2 {gsave translate 45 rotate 0 0 S2 stroke grestore} bind def
/D3 {gsave translate 45 rotate 0 0 S3 stroke grestore} bind def
/D4 {gsave translate 45 rotate 0 0 S4 stroke grestore} bind def
/D5 {gsave translate 45 rotate 0 0 S5 stroke grestore} bind def
/D6 {gsave translate 45 rotate 0 0 S6 stroke grestore} bind def
/D7 {gsave translate 45 rotate 0 0 S7 stroke grestore} bind def
/D8 {gsave translate 45 rotate 0 0 S8 stroke grestore} bind def
/D9 {gsave translate 45 rotate 0 0 S9 stroke grestore} bind def
/D10 {gsave translate 45 rotate 0 0 S10 stroke grestore} bind def
/D11 {gsave translate 45 rotate 0 0 S11 stroke grestore} bind def
/D12 {gsave translate 45 rotate 0 0 S12 stroke grestore} bind def
/D13 {gsave translate 45 rotate 0 0 S13 stroke grestore} bind def
/D14 {gsave translate 45 rotate 0 0 S14 stroke grestore} bind def
/D15 {gsave translate 45 rotate 0 0 S15 stroke grestore} bind def
/DiaE {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke} def
/BoxE {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke} def
/TriUE {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke} def
/TriDE {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke} def
/PentE {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore} def
/CircE {stroke [] 0 setdash 
  hpt 0 360 arc stroke} def
/Opaque {gsave closepath 1 setgray fill grestore 0 setgray closepath} def
/DiaW {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V Opaque stroke} def
/BoxW {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V Opaque stroke} def
/TriUW {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V Opaque stroke} def
/TriDW {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V Opaque stroke} def
/PentW {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  Opaque stroke grestore} def
/CircW {stroke [] 0 setdash 
  hpt 0 360 arc Opaque stroke} def
/BoxFill {gsave Rec 1 setgray fill grestore} def
/Density {
  /Fillden exch def
  currentrgbcolor
  /ColB exch def /ColG exch def /ColR exch def
  /ColR ColR Fillden mul Fillden sub 1 add def
  /ColG ColG Fillden mul Fillden sub 1 add def
  /ColB ColB Fillden mul Fillden sub 1 add def
  ColR ColG ColB setrgbcolor} def
/BoxColFill {gsave Rec PolyFill} def
/PolyFill {gsave Density fill grestore grestore} def
/h {rlineto rlineto rlineto gsave closepath fill grestore} bind def
%
% PostScript Level 1 Pattern Fill routine for rectangles
% Usage: x y w h s a XX PatternFill
%	x,y = lower left corner of box to be filled
%	w,h = width and height of box
%	  a = angle in degrees between lines and x-axis
%	 XX = 0/1 for no/yes cross-hatch
%
/PatternFill {gsave /PFa [ 9 2 roll ] def
  PFa 0 get PFa 2 get 2 div add PFa 1 get PFa 3 get 2 div add translate
  PFa 2 get -2 div PFa 3 get -2 div PFa 2 get PFa 3 get Rec
  TransparentPatterns {} {gsave 1 setgray fill grestore} ifelse
  clip
  currentlinewidth 0.5 mul setlinewidth
  /PFs PFa 2 get dup mul PFa 3 get dup mul add sqrt def
  0 0 M PFa 5 get rotate PFs -2 div dup translate
  0 1 PFs PFa 4 get div 1 add floor cvi
	{PFa 4 get mul 0 M 0 PFs V} for
  0 PFa 6 get ne {
	0 1 PFs PFa 4 get div 1 add floor cvi
	{PFa 4 get mul 0 2 1 roll M PFs 0 V} for
 } if
  stroke grestore} def
%
/languagelevel where
 {pop languagelevel} {1} ifelse
dup 2 lt
	{/InterpretLevel1 true def
	 /InterpretLevel3 false def}
	{/InterpretLevel1 Level1 def
	 2 gt
	    {/InterpretLevel3 Level3 def}
	    {/InterpretLevel3 false def}
	 ifelse }
 ifelse
%
% PostScript level 2 pattern fill definitions
%
/Level2PatternFill {
/Tile8x8 {/PaintType 2 /PatternType 1 /TilingType 1 /BBox [0 0 8 8] /XStep 8 /YStep 8}
	bind def
/KeepColor {currentrgbcolor [/Pattern /DeviceRGB] setcolorspace} bind def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 8 8 L 0 8 M 8 0 L stroke} 
>> matrix makepattern
/Pat1 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 8 8 L 0 8 M 8 0 L stroke
	0 4 M 4 8 L 8 4 L 4 0 L 0 4 L stroke}
>> matrix makepattern
/Pat2 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 0 8 L
	8 8 L 8 0 L 0 0 L fill}
>> matrix makepattern
/Pat3 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -4 8 M 8 -4 L
	0 12 M 12 0 L stroke}
>> matrix makepattern
/Pat4 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -4 0 M 8 12 L
	0 -4 M 12 8 L stroke}
>> matrix makepattern
/Pat5 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -2 8 M 4 -4 L
	0 12 M 8 -4 L 4 12 M 10 0 L stroke}
>> matrix makepattern
/Pat6 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -2 0 M 4 12 L
	0 -4 M 8 12 L 4 -4 M 10 8 L stroke}
>> matrix makepattern
/Pat7 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 8 -2 M -4 4 L
	12 0 M -4 8 L 12 4 M 0 10 L stroke}
>> matrix makepattern
/Pat8 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 -2 M 12 4 L
	-4 0 M 12 8 L -4 4 M 8 10 L stroke}
>> matrix makepattern
/Pat9 exch def
/Pattern1 {PatternBgnd KeepColor Pat1 setpattern} bind def
/Pattern2 {PatternBgnd KeepColor Pat2 setpattern} bind def
/Pattern3 {PatternBgnd KeepColor Pat3 setpattern} bind def
/Pattern4 {PatternBgnd KeepColor Landscape {Pat5} {Pat4} ifelse setpattern} bind def
/Pattern5 {PatternBgnd KeepColor Landscape {Pat4} {Pat5} ifelse setpattern} bind def
/Pattern6 {PatternBgnd KeepColor Landscape {Pat9} {Pat6} ifelse setpattern} bind def
/Pattern7 {PatternBgnd KeepColor Landscape {Pat8} {Pat7} ifelse setpattern} bind def
} def
%
%
%End of PostScript Level 2 code
%
/PatternBgnd {
  TransparentPatterns {} {gsave 1 setgray fill grestore} ifelse
} def
%
% Substitute for Level 2 pattern fill codes with
% grayscale if Level 2 support is not selected.
%
/Level1PatternFill {
/Pattern1 {0.250 Density} bind def
/Pattern2 {0.500 Density} bind def
/Pattern3 {0.750 Density} bind def
/Pattern4 {0.125 Density} bind def
/Pattern5 {0.375 Density} bind def
/Pattern6 {0.625 Density} bind def
/Pattern7 {0.875 Density} bind def
} def
%
% Now test for support of Level 2 code
%
Level1 {Level1PatternFill} {Level2PatternFill} ifelse
%
/Symbol-Oblique /Symbol findfont [1 0 .167 1 0 0] makefont
dup length dict begin {1 index /FID eq {pop pop} {def} ifelse} forall
currentdict end definefont pop
%
/MFshow {
   { dup 5 get 3 ge
     { 5 get 3 eq {gsave} {grestore} ifelse }
     {dup dup 0 get findfont exch 1 get scalefont setfont
     [ currentpoint ] exch dup 2 get 0 exch R dup 5 get 2 ne {dup dup 6
     get exch 4 get {textshow} {stringwidth pop 0 R} ifelse }if dup 5 get 0 eq
     {dup 3 get {2 get neg 0 exch R pop} {pop aload pop M} ifelse} {dup 5
     get 1 eq {dup 2 get exch dup 3 get exch 6 get stringwidth pop -2 div
     dup 0 R} {dup 6 get stringwidth pop -2 div 0 R 6 get
     textshow 2 index {aload pop M neg 3 -1 roll neg R pop pop} {pop pop pop
     pop aload pop M} ifelse }ifelse }ifelse }
     ifelse }
   forall} def
/Gswidth {dup type /stringtype eq {stringwidth} {pop (n) stringwidth} ifelse} def
/MFwidth {0 exch { dup 5 get 3 ge { 5 get 3 eq { 0 } { pop } ifelse }
 {dup 3 get{dup dup 0 get findfont exch 1 get scalefont setfont
     6 get Gswidth pop add} {pop} ifelse} ifelse} forall} def
/MLshow { currentpoint stroke M
  0 exch R
  Blacktext {gsave 0 setgray MFshow grestore} {MFshow} ifelse } bind def
/MRshow { currentpoint stroke M
  exch dup MFwidth neg 3 -1 roll R
  Blacktext {gsave 0 setgray MFshow grestore} {MFshow} ifelse } bind def
/MCshow { currentpoint stroke M
  exch dup MFwidth -2 div 3 -1 roll R
  Blacktext {gsave 0 setgray MFshow grestore} {MFshow} ifelse } bind def
/XYsave    { [( ) 1 2 true false 3 ()] } bind def
/XYrestore { [( ) 1 2 true false 4 ()] } bind def
Level1 SuppressPDFMark or 
{} {
/SDict 10 dict def
systemdict /pdfmark known not {
  userdict /pdfmark systemdict /cleartomark get put
} if
SDict begin [
  /Title (plot/distribution/dist_DC_SP.eps)
  /Subject (gnuplot plot)
  /Creator (gnuplot 5.0 patchlevel 3)
  /Author (Kim)
%  /Producer (gnuplot)
%  /Keywords ()
  /CreationDate (Tue Oct 10 07:33:34 2017)
  /DOCINFO pdfmark
end
} ifelse
%
% Support for boxed text - Ethan A Merritt May 2005
%
/InitTextBox { userdict /TBy2 3 -1 roll put userdict /TBx2 3 -1 roll put
           userdict /TBy1 3 -1 roll put userdict /TBx1 3 -1 roll put
	   /Boxing true def } def
/ExtendTextBox { Boxing
    { gsave dup false charpath pathbbox
      dup TBy2 gt {userdict /TBy2 3 -1 roll put} {pop} ifelse
      dup TBx2 gt {userdict /TBx2 3 -1 roll put} {pop} ifelse
      dup TBy1 lt {userdict /TBy1 3 -1 roll put} {pop} ifelse
      dup TBx1 lt {userdict /TBx1 3 -1 roll put} {pop} ifelse
      grestore } if } def
/PopTextBox { newpath TBx1 TBxmargin sub TBy1 TBymargin sub M
               TBx1 TBxmargin sub TBy2 TBymargin add L
	       TBx2 TBxmargin add TBy2 TBymargin add L
	       TBx2 TBxmargin add TBy1 TBymargin sub L closepath } def
/DrawTextBox { PopTextBox stroke /Boxing false def} def
/FillTextBox { gsave PopTextBox 1 1 1 setrgbcolor fill grestore /Boxing false def} def
0 0 0 0 InitTextBox
/TBxmargin 20 def
/TBymargin 20 def
/Boxing false def
/textshow { ExtendTextBox Gshow } def
%
% redundant definitions for compatibility with prologue.ps older than 5.0.2
/LTB {BL [] LCb DL} def
/LTb {PL [] LCb DL} def
end
%%EndProlog
%%Page: 1 1
gnudict begin
gsave
doclip
50 50 translate
0.050 0.050 scale
0 setgray
newpath
(Times-roman) findfont 200 scalefont setfont
BackgroundColor 0 lt 3 1 roll 0 lt exch 0 lt or or not {BackgroundColor C 1.000 0 0 4320.00 4320.00 BoxColFill} if
1.000 UL
LTb
LCb setrgbcolor
740 640 M
63 0 V
3156 0 R
-63 0 V
stroke
620 640 M
[ [(Times-roman) 200.0 0.0 true true 0 ( 0)]
] -66.7 MRshow
1.000 UL
LTb
LCb setrgbcolor
740 1500 M
63 0 V
3156 0 R
-63 0 V
stroke
620 1500 M
[ [(Times-roman) 200.0 0.0 true true 0 ( 1)]
] -66.7 MRshow
1.000 UL
LTb
LCb setrgbcolor
740 640 M
0 63 V
0 3376 R
0 -63 V
stroke
740 440 M
[ [(Times-roman) 200.0 0.0 true true 0 ( 0)]
] -66.7 MCshow
1.000 UL
LTb
LCb setrgbcolor
1545 640 M
0 63 V
0 3376 R
0 -63 V
stroke
1545 440 M
[ [(Times-roman) 200.0 0.0 true true 0 ( 1)]
] -66.7 MCshow
1.000 UL
LTb
LCb setrgbcolor
1.000 UL
LTB
LCb setrgbcolor
740 4079 N
740 640 L
3219 0 V
0 3439 V
-3219 0 V
Z stroke
1.000 UP
1.000 UL
LTb
LCb setrgbcolor
1545 640 M
0 860 V
stroke
LTb
LCb setrgbcolor
740 1500 M
805 0 V
stroke
LTb
LCb setrgbcolor
LCb setrgbcolor
160 2359 M
currentpoint gsave translate -270 rotate 0 0 moveto
[ [(Times-roman) 200.0 0.0 true true 0 (Density bound ratio)]
] -66.7 MCshow
grestore
LTb
LCb setrgbcolor
2349 140 M
[ [(Times-roman) 200.0 0.0 true true 0 (Time bound ratio)]
] -66.7 MCshow
LTb
% Begin plot #1
1.000 UP
1.000 UL
LTb
LCb setrgbcolor
1430 1022 Pls
1336 1078 Pls
1417 1252 Pls
1200 839 Pls
1449 1323 Pls
1536 1384 Pls
1532 1556 Pls
1358 1258 Pls
944 745 Pls
1358 1060 Pls
791 675 Pls
1511 1018 Pls
1331 1297 Pls
1256 888 Pls
1491 1215 Pls
1520 1725 Pls
1123 764 Pls
1236 1049 Pls
1504 1484 Pls
921 765 Pls
1423 1014 Pls
1517 1775 Pls
1482 1444 Pls
1402 1477 Pls
982 761 Pls
1369 985 Pls
1508 1314 Pls
1483 1476 Pls
1455 1777 Pls
1511 1562 Pls
1125 758 Pls
1445 1712 Pls
1493 1409 Pls
1395 1052 Pls
1516 1108 Pls
1330 1391 Pls
1148 789 Pls
1083 751 Pls
1515 979 Pls
1427 1050 Pls
1478 1149 Pls
1087 823 Pls
1280 1055 Pls
951 832 Pls
1545 1231 Pls
1494 1001 Pls
1444 1447 Pls
1333 1036 Pls
1475 1491 Pls
1133 876 Pls
1537 1271 Pls
844 696 Pls
1536 1734 Pls
946 757 Pls
1522 1630 Pls
1543 1103 Pls
1423 1223 Pls
1328 1295 Pls
1492 1283 Pls
1133 957 Pls
1537 1265 Pls
1487 1176 Pls
839 694 Pls
1490 873 Pls
1301 1114 Pls
1483 1112 Pls
1400 933 Pls
977 783 Pls
1525 1525 Pls
1408 1544 Pls
1414 1704 Pls
949 774 Pls
1429 1088 Pls
1464 1664 Pls
1542 1173 Pls
1513 1575 Pls
1356 940 Pls
1082 739 Pls
1537 1251 Pls
1542 1245 Pls
1489 1936 Pls
1441 1208 Pls
1393 1084 Pls
1443 1130 Pls
1033 811 Pls
1526 1424 Pls
1455 1260 Pls
1486 1209 Pls
1504 1435 Pls
1504 1494 Pls
1324 1155 Pls
1202 990 Pls
1276 822 Pls
1429 1406 Pls
1511 1071 Pls
1525 1272 Pls
1359 1496 Pls
1436 1158 Pls
1051 775 Pls
1332 1028 Pls
1398 1287 Pls
1479 1267 Pls
1489 1430 Pls
1529 1832 Pls
1077 892 Pls
1469 1588 Pls
1496 776 Pls
1494 1380 Pls
1537 1512 Pls
1294 1003 Pls
826 695 Pls
876 723 Pls
1423 1745 Pls
1523 1283 Pls
1467 1389 Pls
1377 1055 Pls
1158 854 Pls
941 684 Pls
913 755 Pls
1355 1076 Pls
1391 1048 Pls
1444 1034 Pls
1538 1225 Pls
1525 1185 Pls
1458 1305 Pls
1211 780 Pls
1487 1496 Pls
1515 1662 Pls
1462 1134 Pls
1293 817 Pls
1516 1223 Pls
1455 1317 Pls
1086 793 Pls
1360 1240 Pls
1132 818 Pls
1405 1281 Pls
1453 856 Pls
1485 1063 Pls
1484 1421 Pls
1387 1589 Pls
1534 1929 Pls
1384 1303 Pls
1489 1493 Pls
1397 993 Pls
1472 1080 Pls
1443 1090 Pls
1328 925 Pls
1439 1786 Pls
1478 1737 Pls
965 802 Pls
1526 1355 Pls
1453 855 Pls
1524 1779 Pls
1498 1220 Pls
1273 1047 Pls
1514 1520 Pls
1343 1171 Pls
1063 726 Pls
1338 1219 Pls
1431 1273 Pls
1263 996 Pls
1281 1348 Pls
1541 1015 Pls
1523 1738 Pls
1356 837 Pls
1401 1134 Pls
1508 1948 Pls
1444 1348 Pls
1377 888 Pls
1228 970 Pls
1317 980 Pls
1544 983 Pls
1475 1420 Pls
927 745 Pls
1356 1048 Pls
1471 1250 Pls
961 758 Pls
1350 869 Pls
1476 1467 Pls
1529 1467 Pls
1180 972 Pls
1502 948 Pls
1545 998 Pls
1057 945 Pls
1519 1294 Pls
1242 807 Pls
1317 964 Pls
1358 1280 Pls
1392 970 Pls
1405 1056 Pls
1513 1518 Pls
1063 729 Pls
1537 1317 Pls
1365 855 Pls
1427 1075 Pls
1367 931 Pls
864 693 Pls
1490 1523 Pls
978 708 Pls
1507 1355 Pls
1339 853 Pls
1322 1013 Pls
1482 1207 Pls
1136 785 Pls
902 740 Pls
1290 1303 Pls
1438 1158 Pls
1314 742 Pls
1303 1027 Pls
1415 1380 Pls
1155 789 Pls
1497 1630 Pls
1444 1748 Pls
1047 776 Pls
1033 831 Pls
1354 1069 Pls
1138 864 Pls
1460 1050 Pls
843 688 Pls
997 745 Pls
1420 1613 Pls
1513 1518 Pls
908 680 Pls
1449 1433 Pls
1507 1465 Pls
1440 1742 Pls
1529 1122 Pls
1519 1282 Pls
1003 778 Pls
1494 1272 Pls
1210 832 Pls
1103 818 Pls
1053 831 Pls
842 669 Pls
1041 906 Pls
949 693 Pls
1533 1148 Pls
1512 1641 Pls
1395 1063 Pls
1235 1123 Pls
1501 1172 Pls
1539 794 Pls
1505 1322 Pls
1499 1304 Pls
1540 1686 Pls
1482 1611 Pls
1469 1100 Pls
1400 1094 Pls
1453 1411 Pls
1416 860 Pls
1523 1402 Pls
1362 852 Pls
1117 804 Pls
1537 1596 Pls
1499 1516 Pls
1205 830 Pls
1540 1930 Pls
1430 1146 Pls
1174 822 Pls
1540 1501 Pls
1244 756 Pls
1441 1121 Pls
1490 1803 Pls
1515 1170 Pls
1039 824 Pls
1491 2166 Pls
1521 1290 Pls
1330 895 Pls
1480 1472 Pls
1332 1373 Pls
1463 1940 Pls
1415 1369 Pls
1198 919 Pls
1423 896 Pls
1529 902 Pls
1131 954 Pls
1522 1127 Pls
1455 1040 Pls
1407 1375 Pls
1520 1340 Pls
1086 943 Pls
1321 964 Pls
1272 921 Pls
1478 1054 Pls
1245 1066 Pls
1421 1258 Pls
980 735 Pls
1372 1179 Pls
1314 1154 Pls
1374 879 Pls
1535 1350 Pls
1482 1381 Pls
1252 875 Pls
943 782 Pls
1348 1056 Pls
1163 1118 Pls
1062 812 Pls
1132 978 Pls
1473 1631 Pls
1049 793 Pls
1462 1116 Pls
1459 1951 Pls
907 724 Pls
1421 1431 Pls
1505 1151 Pls
1468 1444 Pls
1464 1765 Pls
1413 1120 Pls
1542 1273 Pls
1541 1862 Pls
1500 1461 Pls
802 686 Pls
1111 847 Pls
1381 1170 Pls
1016 754 Pls
1304 1044 Pls
1489 1652 Pls
1321 1115 Pls
1496 1490 Pls
1521 1492 Pls
1532 1742 Pls
1542 1269 Pls
1255 848 Pls
1417 1620 Pls
944 762 Pls
1505 1130 Pls
1525 1481 Pls
1486 1237 Pls
1539 1641 Pls
921 702 Pls
1109 762 Pls
1512 1105 Pls
1526 1364 Pls
1394 1666 Pls
1480 1664 Pls
1525 1388 Pls
1466 1549 Pls
1452 972 Pls
1503 1478 Pls
1508 1136 Pls
991 804 Pls
1017 713 Pls
1535 1193 Pls
1408 1198 Pls
1358 1325 Pls
1101 904 Pls
1487 1469 Pls
828 667 Pls
1474 1496 Pls
1469 1161 Pls
1373 1444 Pls
1265 739 Pls
1360 819 Pls
1018 870 Pls
998 845 Pls
1508 1077 Pls
1303 883 Pls
820 681 Pls
1447 1518 Pls
1501 1180 Pls
931 785 Pls
1526 1474 Pls
1506 1991 Pls
1493 1169 Pls
1408 1018 Pls
1008 763 Pls
1469 1529 Pls
1255 899 Pls
1411 1583 Pls
1414 1292 Pls
1511 2045 Pls
1508 1709 Pls
1306 874 Pls
1545 1888 Pls
1261 850 Pls
1436 1559 Pls
1367 1313 Pls
1407 1172 Pls
895 735 Pls
1070 834 Pls
1297 925 Pls
1333 876 Pls
1518 1431 Pls
1280 730 Pls
1191 1052 Pls
1327 1266 Pls
771 660 Pls
1442 1107 Pls
1489 1042 Pls
1478 1135 Pls
1225 782 Pls
1379 1033 Pls
1372 1139 Pls
1295 1085 Pls
1016 797 Pls
1513 1332 Pls
1431 1430 Pls
1423 917 Pls
1487 1501 Pls
918 796 Pls
1250 1008 Pls
942 756 Pls
809 669 Pls
1070 834 Pls
1398 1450 Pls
858 702 Pls
991 797 Pls
1068 786 Pls
1416 1119 Pls
1463 1098 Pls
1328 932 Pls
1535 1383 Pls
884 761 Pls
1144 890 Pls
1433 1339 Pls
1298 833 Pls
1232 742 Pls
1316 981 Pls
1462 1175 Pls
1462 1116 Pls
1270 805 Pls
809 663 Pls
1375 756 Pls
1481 1702 Pls
1521 866 Pls
1368 934 Pls
1519 1584 Pls
846 681 Pls
1527 765 Pls
1406 768 Pls
1545 1828 Pls
1252 1170 Pls
1510 1170 Pls
943 835 Pls
1411 1148 Pls
1503 1267 Pls
811 691 Pls
1419 1202 Pls
1168 774 Pls
971 752 Pls
1526 1576 Pls
1543 1378 Pls
1541 1875 Pls
1116 822 Pls
1385 1331 Pls
903 799 Pls
1488 1394 Pls
1529 1171 Pls
1538 1167 Pls
1484 1042 Pls
1391 1411 Pls
1462 1321 Pls
1401 1224 Pls
1488 1723 Pls
1431 1190 Pls
1219 863 Pls
1335 1371 Pls
1244 920 Pls
1284 954 Pls
1515 1465 Pls
1520 1684 Pls
1501 1235 Pls
1533 1559 Pls
1495 1966 Pls
1497 1423 Pls
1300 1046 Pls
1338 1000 Pls
961 750 Pls
1500 1453 Pls
992 723 Pls
1449 1093 Pls
1394 849 Pls
1480 1699 Pls
1430 1507 Pls
1164 739 Pls
999 814 Pls
923 778 Pls
1455 1612 Pls
1250 801 Pls
1481 1271 Pls
1523 1207 Pls
786 675 Pls
1543 1185 Pls
1352 984 Pls
1390 1438 Pls
1239 961 Pls
1278 1104 Pls
1430 1263 Pls
1426 1346 Pls
1363 1087 Pls
1406 1050 Pls
1506 1303 Pls
1474 794 Pls
1393 1067 Pls
1498 1202 Pls
970 700 Pls
1392 1183 Pls
1402 1379 Pls
1296 880 Pls
1538 1139 Pls
1435 1063 Pls
1399 807 Pls
1497 1718 Pls
1443 1097 Pls
1496 1560 Pls
1354 1208 Pls
853 681 Pls
1451 877 Pls
1466 1034 Pls
1071 932 Pls
1394 1485 Pls
1529 1653 Pls
1247 960 Pls
1441 1215 Pls
1039 799 Pls
1472 980 Pls
1499 1079 Pls
1309 1080 Pls
1513 1498 Pls
1442 1180 Pls
1540 1430 Pls
1436 764 Pls
1531 876 Pls
1513 1415 Pls
851 674 Pls
965 734 Pls
1526 1374 Pls
1184 702 Pls
1455 1306 Pls
1488 814 Pls
1520 1470 Pls
1028 794 Pls
1495 1498 Pls
1326 850 Pls
1521 1197 Pls
1412 989 Pls
1468 1357 Pls
1278 938 Pls
964 759 Pls
1545 1016 Pls
911 699 Pls
1414 1245 Pls
1506 1303 Pls
1493 995 Pls
1328 1099 Pls
1411 933 Pls
1419 1171 Pls
1372 1458 Pls
1516 1440 Pls
1276 773 Pls
1366 1332 Pls
1373 944 Pls
1485 1187 Pls
1478 1443 Pls
1545 1344 Pls
1360 1047 Pls
1266 1072 Pls
1015 728 Pls
1366 1520 Pls
1375 1293 Pls
1297 1097 Pls
1238 857 Pls
1540 1340 Pls
1471 1348 Pls
981 720 Pls
1459 1701 Pls
954 780 Pls
948 749 Pls
1411 890 Pls
1261 850 Pls
1529 1476 Pls
1177 973 Pls
1302 1222 Pls
1425 1220 Pls
1520 1148 Pls
1488 1746 Pls
1420 1388 Pls
1535 1684 Pls
1260 1004 Pls
1325 811 Pls
1510 1702 Pls
1491 1600 Pls
1459 1282 Pls
1509 1415 Pls
1545 1324 Pls
1350 1084 Pls
1499 1249 Pls
1541 1082 Pls
1532 1447 Pls
1468 1322 Pls
1438 1430 Pls
948 722 Pls
1536 1461 Pls
1414 1199 Pls
1473 1192 Pls
1507 1627 Pls
1280 797 Pls
891 772 Pls
1512 1385 Pls
1276 1179 Pls
1543 1071 Pls
1543 1201 Pls
1519 877 Pls
1340 1554 Pls
1494 1317 Pls
1507 1225 Pls
1456 1349 Pls
1533 1251 Pls
1447 1019 Pls
1445 1243 Pls
1200 1032 Pls
1196 998 Pls
1269 1116 Pls
929 773 Pls
1253 991 Pls
778 668 Pls
1493 1051 Pls
1536 1618 Pls
% End plot #1
2.000 UL
LTb
LCb setrgbcolor
1.000 UL
LTB
LCb setrgbcolor
740 4079 N
740 640 L
3219 0 V
0 3439 V
-3219 0 V
Z stroke
1.000 UP
1.000 UL
LTb
LCb setrgbcolor
stroke
grestore
end
showpage
%%Trailer
%%DocumentFonts: Times-roman
